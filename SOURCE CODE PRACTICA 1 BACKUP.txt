LIST P=18F4550
#include <p18f4550.inc>

;### CONFIGURACIÓN DE FUSIBLES ###
CONFIG FOSC = HS
CONFIG WDT = OFF
CONFIG MCLRE = OFF
CONFIG PBADEN = OFF
CONFIG LVP = OFF
;### VECTOR DE INICIO ###
ORG 0x0000
GOTO MAIN

;### VARIABLES ###
CBLOCK 0x20
    DIEZ
    CUENTA
    UNIDAD
    DECENA
    CENTENA
    REG1
    TAB
    REG2
    BANDERAS ;0X28
    UNIDAD1 ;0X29
    DECENA1 ;0X2A
    CENTENA1 ;0X2B
    UNIDAD2  ;0X2C
    DECENA2  ;0X2D
    CENTENA2 ;X2E
    NUMEROH
    NUMEROL
    NUMERO1H
    NUMERO1L
    NUMERO2H
    NUMERO2L
    REPIN
    REPOUT
ENDC
   #DEFINE ENTER PORTB,0
   #DEFINE CLEAR PORTB,1
   #DEFINE SUMA PORTB,2
   #DEFINE RESTA PORTB,3
   #DEFINE MULT PORTB,4
   #DEFINE DIV PORTB,5
   #DEFINE COMP PORTB,6
   #DEFINE RANDOM PORTB,7
   #DEFINE UNI PORTE,2
   #DEFINE DEC PORTE,1
   #DEFINE CEN PORTE,0
   #DEFINE SM BANDERAS,0
   #DEFINE RS BANDERAS,1
   #DEFINE ML BANDERAS,2
   #DEFINE DV BANDERAS,3
   #DEFINE CP BANDERAS,4
   #DEFINE RM BANDERAS,5
   #DEFINE OF BANDERAS,7
   
;## Inicializaciones##
INIT_OSC
    CLRF OSCTUNE,0    
    MOVLW b'01110110'
    MOVWF OSCCON
    RETURN
INIT_PORTS
    MOVLW b'00001111'
    MOVWF ADCON1
    MOVLW b'11111111' 
    MOVWF TRISA
    MOVLW b'11111111'
    MOVWF TRISB
    CLRF TRISC,0
    CLRF TRISD,0
    CLRF TRISE,0
    CLRF LATA
    CLRF LATB
    CLRF LATC
    SETF LATD
    CLRF LATE
    BCF INTCON2,7
    RETURN
INIT_VARIABLES ;INICIALIZAMOS LAS VARIABLES EN 0
   CLRF UNIDAD
   CLRF DECENA
   CLRF CENTENA
   CLRF UNIDAD1
   CLRF DECENA1
   CLRF CENTENA1
   CLRF UNIDAD2
   CLRF DECENA2
   CLRF CENTENA2
   CLRF NUMEROL
   CLRF NUMEROH
   CLRF NUMERO1L
   CLRF NUMERO1H
   CLRF NUMERO2L
   CLRF NUMERO2H
   MOVLW .10
   MOVWF DIEZ
   CLRF BANDERAS
   RETURN

;### TABLA DE DISPLAY DE 7 SEGMENTOS ###
ORG 0x300
TABLA:
    MOVWF TAB
    CPFSGT DIEZ ;COMPARO CON 10 PARA SABER SI EL NUMERO ES MENOR QUE 10
    RETLW B'01111001';; SI ES MAYOR A 9, SE DEVUELVE CON UN NUMERO QUE MUESTRA ERROR
    ADDWF TAB,0
    ADDWF PCL,1
    RETLW b'00111111' ; 0
    RETLW b'00000110' ; 1
    RETLW b'01011011' ; 2
    RETLW b'01001111' ; 3
    RETLW b'01100110' ; 4
    RETLW b'01101101' ; 5
    RETLW b'01111101' ; 6
    RETLW b'00000111' ; 7
    RETLW b'11111111' ; 8
    RETLW b'01101111' ; 9
TAB_OPE:	;patron para las operaciones
   BTFSC SM
   MOVLW H'6D'
   BTFSC RS
   MOVLW H'50'
   BTFSC ML
   MOVLW H'76'
   BTFSC DV
   MOVLW H'52'
   BTFSC CP
   MOVLW H'39'
   BSF DEC
   MOVWF PORTD
   CALL RET_3MS
   BCF DEC
   RETURN
   
LOOP:
    ; Leer DIP switch (RA0–RA3)
    MOVF PORTA,W
    ANDLW 0x0F         ; Asegurar solo los 4 bits bajos
    MOVWF UNIDAD 	;lo guardamos para que se Vea en el display
    CALL MULTIPLEXION ; Obtener patrón del display
    BTFSC ENTER 
    GOTO LOOP    ; Repetir constantemente
    CALL AR	;sistema anti rebote
    RETURN
TBAN:		;tabla para activar la bandera correspondiente a la operacion
   
   BTFSS SUMA
   RETLW .1
   BTFSS RESTA
   RETLW .2
   BTFSS MULT
   RETLW .4
   BTFSS DIV
   RETLW .8
   BTFSS COMP
   RETLW .16
   RETURN
AR
    BTFSS ENTER
    GOTO AR
    RETURN ;FUNCION ANTIREBOTE
   
RET_250US ;RETARDO 
    MOVLW .166     ;1
    MOVWF REG1     ;1
LOOP_RET
    DECFSZ REG1,1     ;1 o 2
    GOTO LOOP_RET    ;2
    RETURN      ;2
RET_3MS
   MOVLW .5
   MOVWF REG2,1
LOOP_RET2
   MOVLW .251
   MOVWF REG1,1
DECREMENTAR  DECFSZ REG1,1
   GOTO DECREMENTAR
   DECFSZ REG2,1
   GOTO LOOP_RET2
   RETURN
MULTIPLEXION
   ;LLEVAMOS UNIDAD AL PUERTO D
    BSF PORTE,2
    MOVF UNIDAD,W
    CALL TABLA
    MOVWF PORTD
    CALL RET_3MS
    BCF PORTE,2
    ;LLEVAMOS DECENA AL PUERTO D
     BSF PORTE,1
    MOVF DECENA,W
    CALL TABLA
    MOVWF PORTD
     CALL RET_3MS
    BCF PORTE,1
    ;;LLEVAMOS CENTENA AL PUERTO D
    BSF PORTE,0
    MOVF  CENTENA,W
    CALL TABLA
    MOVWF PORTD
     CALL RET_3MS
    BCF PORTE,0
    RETURN
   
CONVERSION_BCD_BIN 
   TSTFSZ CENTENA
   CALL AGREGAR_CENTENA
   TSTFSZ DECENA
   CALL AGREGAR_DECENA
   TSTFSZ UNIDAD
   CALL AGREGAR_UNIDAD
   RETURN

AGREGAR_CENTENA
LOOP_C1
    MOVLW   B'01100100'  ; CARGA W=100      
    ADDWF NUMEROL, F	 ; SUMA 100 A NUMEROL Y GUARDA EL RESULTADO EN NUMEROL
    BTFSS STATUS, C           
    GOTO CONTINUE_LOOP1       
    INCF NUMEROH, F      ; SI C ES 1, SALTA PARA AUMENTAR EL VALOR DE NUMEROH
CONTINUE_LOOP1
     DECFSZ CENTENA, F	 ; DECREMENTA CENTENA. SI EL RESULTADO ES 0, SALTA A LA SIGUIENTE LINEA
     GOTO LOOP_C1	 ; SI CENTENA NO ES CERO, VUELVE AL INCICIO DEL BUCLE
     RETURN 		 ; CUANDO CENTENA LLEGA A CERO, ESCAPA DE LA SUBRUTINA

AGREGAR_DECENA
LOOP_D1
    MOVLW   B'00001010'  ; CARGA W=10      
    ADDWF NUMEROL, F	 ; SUMA 10 A NUMEROL Y GUARDA EL RESULTADO EN NUMEROL
    BTFSS STATUS, C           
    GOTO CONTINUE_LOOP2       
    INCF NUMEROH, F      ; SI C ES 1, SALTA PARA AUMENTAR EL VALOR DE NUMEROH
CONTINUE_LOOP2
     DECFSZ DECENA, F	 ; DECREMENTA DECENA. SI EL RESULTADO ES 0, SALTA A LA SIGUIENTE LINEA
     GOTO LOOP_D1	 ; SI DECENA NO ES CERO, VUELVE AL INCICIO DEL BUCLE
     RETURN 		 ; CUANDO DECENA LLEGA A CERO, ESCAPA DE LA SUBRUTINA

AGREGAR_UNIDAD
LOOP_U1     
    INCF NUMEROL, F	 ; SUMA 1 A NUMEROL Y GUARDA EL RESULTADO EN NUMEROL
    BTFSS STATUS, C           
    GOTO CONTINUE_LOOP3      
    INCF NUMEROH, F      ; SI C ES 1, SALTA PARA AUMENTAR EL VALOR DE NUMEROH
CONTINUE_LOOP3:
     DECFSZ UNIDAD, F	 ; DECREMENTA UNIDAD. SI EL RESULTADO ES 0, SALTA A LA SIGUIENTE LINEA
     GOTO LOOP_U1	 ; SI UNIDAD NO ES CERO, VUELVE AL INCICIO DEL BUCLE
     RETURN 		 ; CUANDO UNIDAD LLEGA A CERO, ESCAPA DE LA SUBRUTINA 
   
CONVERSION_BIN_BCD  
  CALL QUITAR_CENTENA
  CALL QUITAR_DECENA
  CALL QUITAR_UNIDAD
  RETURN

QUITAR_CENTENA
    CLRF CENTENA             ; REINICIA EL VALOR DE CENTENAS A 0
    MOVLW B'01100100'        ; CARGA W=100
LOOP_C2:
    SUBWF NUMEROL,F          ; RESTAMOS 100 A NUMEROL
    BTFSS STATUS,C           ; SI HAY CARRY, LA RESTA FUE EXITOSA
    GOTO BAJAR_H1
STEP    INCF CENTENA,F       ; INCREMENTA LAS CENTENAS EN 1
    GOTO LOOP_C2             ; REPITE EL BUCLE
BAJAR_H1 
    DECF NUMEROH,F
    BTFSC STATUS,C	     ; SI NO SE ACTIVA EL CARRY, NUMEROH=0
    GOTO STEP	             ; REPITE EL BUCLE, NO SIN ANTES AUMENTAR LAS CENTENAS
    ADDWF NUMEROL,F	     ; SE DEVUELVE LA ULTIMA RESTA EN NUMEROL
    INCF NUMEROH,F	     ; SE DEVUELVE EL ULTIMO DECREMENTO EN NUMEROH
    RETURN                   ; ESCAPE DE LA SUBRUTINA, SOLO SE ACTIVA SI NUMEROL<100 Y NUMEROH=0
        
QUITAR_DECENA
    CLRF DECENA              ; REINICIA EL VALOR DE DECENA A 0
    MOVLW B'00001010'        ; CARGA W=10
LOOP_D2:
    SUBWF NUMEROL,F          ; RESTAMOS 10 A NUMEROL
    BTFSS STATUS,C           ; SI HAY CARRY, LA RESTA FUE EXITOSA
    GOTO SALIR_D 
    INCF DECENA,F            ; INCREMENTA LAS DECENAS EN 1
    GOTO LOOP_D2             ; REPITE EL BUCLE
SALIR_D
    ADDWF NUMEROL,F	     ; SE DEVUELVE LA ULTIMA RESTA EN NUMEROL
    RETURN                   ; ESCAPE DE LA SUBRUTINA, SOLO SE ACTIVA SI NUMEROL<10 Y NUMEROH=0
   
QUITAR_UNIDAD
    CLRF UNIDAD              ; REINICIA EL VALOR DE UNIDAD A 0
LOOP_U2:
    DECF NUMEROL,F           ; RESTAMOS 1 A NUMEROL
    BTFSS STATUS,C           ; SI HAY CARRY, LA RESTA FUE EXITOSA
    GOTO SALIR_U
    INCF UNIDAD,F            ; INCREMENTA LAS DECENAS EN 1
    GOTO LOOP_U2             ; REPITE EL BUCLE
SALIR_U
    INCF NUMEROL,F           ; SE DEVUELVE LA ULTIMA RESTA EN NUMEROL
    RETURN                   ; ESCAPE DE LA SUBRUTINA, SOLO SE ACTIVA SI NUMEROL<10 Y NUMEROH=0
  
OPERAR
   MOVF CENTENA1,0
   MOVWF CENTENA
   MOVF DECENA1,0
   MOVWF DECENA
   MOVF UNIDAD1,0
   MOVWF UNIDAD
   CALL REP_MULTIPLEXION
   CALL REP_TAB_OPE
   MOVF CENTENA2,0
   MOVWF CENTENA
   MOVF DECENA2,0
   MOVWF DECENA
   MOVF UNIDAD2,0
   MOVWF UNIDAD
   CALL REP_MULTIPLEXION
   BTFSC SM
   CALL SUMAR
   BTFSC ML
   CALL MULTIPLICAR
   RETURN 
   
REP_MULTIPLEXION    ; REPETIR LOS NUMEROS MULTIPLEXADOS EN EL DISPLAY POR 2SG    
      MOVLW .200
      MOVWF REPIN
INT_1  DCFSNZ REPIN   
      RETURN
      CALL MULTIPLEXION
      GOTO INT_1
      
REP_TAB_OPE   ; REPETIR EL OPERANDO EN EL DISPLAY POR 2SG
      MOVLW .3
      MOVWF REPOUT
      MOVLW .200
      MOVWF REPIN
INT_2  DCFSNZ REPIN   
      GOTO OUT2
      CALL TAB_OPE
      GOTO INT2
OUT2  DCFSNZ REPOUT 
      RETURN
      GOTO INT_2
      
SUMAR 
   MOVF NUMERO1L,0 ;W= NUMERO1L
   ADDWF NUMERO2L,0 ;W= NUMERO1L + NUMERO2L
   MOVWF NUMEROL ;NUMEROL= RESULTADO 
   BTFSC STATUS,C 
   INCF NUMERO1H,1 ; INCREMENTO EN NUMERO1H DE ACTIVARSE EL CARRY
   MOVF NUMERO1H,0 ;W= NUMERO1H
   ADDWF NUMERO2H,0 ;W= NUMERO1H + NUMERO2H
   MOVWF NUMEROH ;NUMEROH= W 
   CALL CHECK
   CALL CONVERSION_BIN_BCD
   CALL REP_MULTIPLEXION 
   RETURN
   
MULTIPLICAR ; UNIDAD DECENA CENTENA AGARRADAS DEL SEGUNDO NUMERO EN BCD
   CLRF NUMEROL        ;NUMEROL= 0
   CLRF NUMEROH	       ;NUMEROH= 0
REP_UNI   
   DECF UNIDAD
   BTFSS STATUS,C
   GOTO REP_DEC
   MOVF NUMERO1L,0      ;W= NUMERO1L
   ADDWF NUMEROL,1      ;NUMEROL= NUMEROL + NUMERO1L
   BTFSC STATUS,C 	
   GOTO OPEN
   MOVF NUMERO1H,0       ;W= NUMERO1H
CLOSE ADDWF NUMEROH,1     ;NUMEROH= NUMEROH + NUMERO1H
   GOTO REP_UNI
OPEN INCF NUMERO1H,0       ;W= NUMERO1H+1
   GOTO CLOSE
REP_DEC 
   DECF DECENA,1
   BTFSS STATUS,C
   GOTO REP_CEN
   MOVLW .10
   MOVWF UNIDAD		;UNIDAD= 10
   GOTO REP_UNI   
REP_CEN
   DECF CENTENA,1
   BTFSS STATUS,C
   GOTO RESULTADO_MULTI
   MOVLW .10
   MOVWF DECENA		;UNIDAD= 10
   GOTO REP_DEC
RESULTADO_MULTI
   CALL CHECK
   CALL CONVERSION_BIN_BCD
   CALL REP_MULTIPLEXION
   RETURN
   
CHECK   
	MOVLW .3
	CPFSGT NUMEROH ;COMPROBACION DE QUE SE CUMPLA: NUMEROH>3
	GOTO CHECK1
	GOTO O_F ;SEÑAL DE OVERFLOW EN LA OPERACION
CHECK1  CPFSEQ NUMEROH ;COMPROBACION DE QUE SE CUMPLA: NUMEROH=3
	RETURN
	MOVLW .231
	CPFSGT NUMEROL ;COMPROBACION DE QUE SE CUMPLA: NUMEROL>231
	RETURN
	GOTO O_F ;SEÑAL DE OVERFLOW EN LA OPERACION
	
	
O_F 	BSF OF
	MOVLW B'01000000'
	MOVWF UNIDAD
	MOVLW B'01000000'
	MOVWF DECENA
	MOVLW B'01000000'
	MOVWF CENTENA
	CALL REP_MULTIPLEXION
	GOTO WORM_HOLE
RET_200MS ;RETARDO 
   MOVLW .254
   MOVWF REG2,1
LOOP_RET20
   MOVLW .254
   MOVWF REG1,1
DECREMENTAR2
   DECFSZ REG1,1
   GOTO DECREMENTAR2
   DECFSZ REG2,1
   GOTO LOOP_RET20
   RETURN
PROBAR_ENTER
   CALL AR
PROB_EN
   CALL MULTIPLEXION
   BTFSS ENTER
   GOTO TESTER_1SG
   GOTO PROB_EN
 SALIDA  RETURN
 
TESTER_1SG:
   BTFSC ENTER
   GOTO SALIDA
   CALL RET_200MS
   BTFSC ENTER
   GOTO SALIDA
   CALL RET_200MS
   BTFSC ENTER 
   GOTO SALIDA
   CALL RET_200MS
   BTFSC ENTER
   GOTO SALIDA
   CALL RET_200MS
   BTFSC ENTER
   GOTO SALIDA
   MOVLW .0
   CPFSEQ CUENTA
   GOTO GUARDAR_2
   GOTO GUARDAR_1
   ;SALIDA?
 RODAR
    MOVF DECENA,0
    MOVWF CENTENA
    MOVF UNIDAD,0
    MOVWF DECENA
    RETURN
;######################################## PROGRAMA PRINCIPAL #####################################
MAIN:
    ;LLAMAMOS A LAS INICIALIZACIONES
    CALL INIT_OSC
    CALL INIT_PORTS
WORM_HOLE  CALL INIT_VARIABLES
    ; Bucle principal
    ;EN LOOP NOS DARA UN NUMERO
    ;UNIDADES
     CALL LOOP
     CALL PROBAR_ENTER
     CALL RODAR
     ;DECENAS
    CALL LOOP
    CALL PROBAR_ENTER
    CALL RODAR
    ;LLAMAMOS PARA PEDIR LA CENTENA
    CALL LOOP
    CALL PROBAR_ENTER
    ;Guardamos todo en el numero 1
    GUARDAR_1
    CALL AR
    INCF CUENTA,1
    MOVF UNIDAD,0
    MOVWF UNIDAD1
    MOVF DECENA,0
    MOVWF DECENA1
    MOVF CENTENA,0
    MOVWF CENTENA1
    CLRF NUMEROL
    CLRF NUMEROH
    CALL CONVERSION_BCD_BIN 
    MOVF NUMEROL,0
    MOVWF NUMERO1L
    MOVF NUMEROH,0
    MOVWF NUMERO1H
    LOOP_OPE
    MOVF BANDERAS,0
    CALL TBAN
    MOVWF BANDERAS
    CALL TAB_OPE
    BTFSC ENTER
    GOTO LOOP_OPE
    CALL AR
    ;DEJAMOS EN 0 LAS UNIDADES, DECENAS Y CENTENAS:
    CLRF UNIDAD
    CLRF DECENA
    CLRF CENTENA
    ;PEDIMOS EL SEGUNDO NUMERO:
    ;UNIDADES
    CALL LOOP
    CALL PROBAR_ENTER
    CALL RODAR
    ;DECENAS
    CALL LOOP
    CALL PROBAR_ENTER
    CALL RODAR
    ;CENTENA
    CALL LOOP
    CALL PROBAR_ENTER
    ;Guardamos todo en el numero 2
    GUARDAR_2
    CALL AR
    MOVF UNIDAD,0
    MOVWF UNIDAD2
    MOVF DECENA,0
    MOVWF DECENA2
    MOVF CENTENA,0
    MOVWF CENTENA2
    CLRF NUMEROH
    CLRF NUMEROL
    CALL CONVERSION_BCD_BIN 
    MOVF NUMEROL,0
    MOVWF NUMERO2L
    MOVF NUMEROH,0
    MOVWF NUMERO2H
    ;OPERACION:
    RESULT
    BTFSC ENTER
    GOTO RESULT
    CALL OPERAR
    GOTO WORM_HOLE
END
